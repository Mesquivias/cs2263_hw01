/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs2263.hw01;

import org.apache.commons.cli.*;

import java.io.Console;
import java.io.PrintStream;
import java.util.Scanner;
import java.io.File;

/***
 * Application used for evaluating simple arithmetic using Apache Commons CLI
 * @author Michael Esquivias
 */

public class App {

    public static void main(String[] args) throws Exception {

        Options options = new Options();

        Option help = Option.builder("h").longOpt("help").desc("print usage message").build();
        help.setRequired(false);
        options.addOption(help);

        Option batch = Option.builder("b").longOpt("batch").argName("file").hasArg().desc("batch file containing expressions to evaluate").build();
        batch.setRequired(false);
        options.addOption(batch);

        Option output = Option.builder("o").longOpt("output").argName("file").hasArg().desc("output file").build();
        output.setRequired(false);
        options.addOption(output);

        HelpFormatter formatter = new HelpFormatter();
        CommandLineParser parse = new DefaultParser();

        CommandLine cmd;

        try {

            cmd = parse.parse(options, args);

            if(cmd.hasOption("h") || cmd.hasOption("help")) {
                formatter.printHelp("app  [OPTIONS] \nEvaluation of simple mathematical expressions", options);
                return;
            }

            if(cmd.hasOption("b") || cmd.hasOption("batch")) {
                System.out.println("Batch file: " + cmd.getOptionValue("batch"));
                Equation_Evaluation eval = new Equation_Evaluation();

                eval.getEquation2();
                return;
            }

            if(cmd.hasOption("o") || cmd.hasOption("output")) {
                System.out.println("Output file: " + cmd.getOptionValue("output"));
                Equation_Evaluation eval = new Equation_Evaluation();

                eval.getEquation3();

            }

            else {
                Equation_Evaluation equation = new Equation_Evaluation();
                Scanner question = new Scanner(System.in);

                boolean end = true;

                while(end) {
                    System.out.println();

                    String input = equation.getEquation();
                    System.out.println(input);
                    System.out.println();

                    System.out.println("Would you like to enter another equation? (1 = Yes) (0 = No) ");
                    int answer = question.nextInt();

                    if (answer == 1) {
                    }

                    else if (answer == 0) {
                        System.out.println();
                        System.out.println("Thank you for using the program!");
                        end = false;
                    }

                    else {
                        System.out.println("That is not a valid input.");
                        end = false;
                    }
                    System.out.println();
                }
            }


        } catch (ParseException e) {
            System.err.println("Parsing failed. Reason: " + e.getMessage());
            formatter.printHelp("app", options);
            System.exit(1);
        }

    }
}
